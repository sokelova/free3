{"version":3,"sources":["components/Counter/Counter.module.css","App.module.css","components/Counter/Counter.tsx","components/Localstorage/Localstorage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter","props","className","s","container","value","valueNumber","maxLocalNumber","minLocalNumber","stop_span","button_group","stop","onClick","incrementNumber","disabled","resetNumber","Localstorage","container_local","local_storage","start","val_local","max","error_input","type","onChange","setNumberMin","setNumberMax","setNumber","App","useState","setMinLocalNumber","setMaxLocalNumber","setValueNumber","examination","event","setMinNum","JSON","parse","currentTarget","setMaxNum","localStorage","setItem","stringify","minValueAsStr","getItem","maxValueAsStr","newValue","getLocalStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65982109.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Counter_container__2NgeY\",\"button_group\":\"Counter_button_group__3XQlc\",\"container_local\":\"Counter_container_local__3dOvl\",\"local_storage\":\"Counter_local_storage__hmViQ\",\"start\":\"Counter_start__2HtxL\",\"max\":\"Counter_max__m5C3i\",\"value\":\"Counter_value__2-sRl\",\"val_local\":\"Counter_val_local__1VYmX\",\"stop\":\"Counter_stop__3Neoo\",\"stop_span\":\"Counter_stop_span__38IsW\",\"error_input\":\"Counter_error_input__2v3ZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"App-header\":\"App_App-header__xLkWl\",\"App-link\":\"App_App-link__3FsH9\"};","import React from 'react';\nimport s from './Counter.module.css'\ntype CounterType = {\n    valueNumber: number\n    incrementNumber: () => void\n    resetNumber: () => void\n    examination: () => void\n    maxLocalNumber: number\n    minLocalNumber: number\n}\n\nexport const Counter = (props:CounterType) => {\n\n    return <div className={s.container}>\n        <div className={s.value}>\n            <span className={props.valueNumber === props.maxLocalNumber || props.minLocalNumber < 0 ? s.stop_span : \"\"}>\n                {props.minLocalNumber<0 ? 'Error input > 0' : props.valueNumber}\n            </span>\n        </div>\n        <div className={s.button_group}>\n            <button\n                className={props.valueNumber === props.maxLocalNumber ? s.stop : \"\"}\n                onClick={props.incrementNumber}\n                disabled={props.valueNumber === props.maxLocalNumber || props.minLocalNumber < 0 || props.minLocalNumber >= props.maxLocalNumber}>\n                INC\n            </button>\n            <button\n                className={props.valueNumber === props.minLocalNumber ? s.stop : \"\"}\n                onClick={props.resetNumber}\n                disabled={props.valueNumber === props.minLocalNumber || props.minLocalNumber < 0 || props.minLocalNumber >= props.maxLocalNumber}>\n                RESET\n            </button>\n        </div>\n    </div>\n}\n","import React, {ChangeEvent} from \"react\";\nimport s from \"../Counter/Counter.module.css\";\n\ntype LocalType = {\n    minLocalNumber: number\n    maxLocalNumber: number\n    setNumber: () => void\n    setNumberMin: (event: ChangeEvent<HTMLInputElement>) => void\n    setNumberMax: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const Localstorage = (props: LocalType) => {\n    return <div className={s.container_local}>\n        <div className={s.local_storage}>\n            <div className={s.start}>\n                <div>\n                    <span className={s.val_local}>start value: </span>\n                </div>\n                <div>\n                    <span className={s.val_local}>max value: </span>\n                </div>\n            </div>\n            <div className={s.max}>\n                <input\n                    className={props.minLocalNumber < 0 || props.minLocalNumber >= props.maxLocalNumber ? s.error_input : \"\"}\n                    type='number'\n                    onChange={props.setNumberMin}\n                    value={props.minLocalNumber}\n                />\n                <input\n                    type='number'\n                    onChange={props.setNumberMax}\n                    value={props.maxLocalNumber}\n                />\n            </div>\n        </div>\n        <div className={s.button_group}>\n            <button\n                className={props.minLocalNumber < 0 || props.minLocalNumber >= props.maxLocalNumber ? s.stop : \"\"}\n                onClick={props.setNumber}\n                disabled={props.minLocalNumber < 0 || props.minLocalNumber >= props.maxLocalNumber}>\n                SET\n            </button>\n        </div>\n    </div>\n}\n","import React, {ChangeEvent, useState} from 'react';\nimport './App.module.css';\nimport { Counter } from './components/Counter/Counter';\nimport {Localstorage} from \"./components/Localstorage/Localstorage\";\n\nfunction App() {\n\n    const [minLocalNumber, setMinLocalNumber] = useState(0);\n    const [maxLocalNumber, setMaxLocalNumber] = useState(5);\n    const [valueNumber, setValueNumber] = useState(minLocalNumber);\n\n    const setLocalStore = () => {\n        localStorage.setItem('counterMinValue', JSON.stringify(minLocalNumber))\n        localStorage.setItem('counterMaxValue', JSON.stringify(maxLocalNumber))\n    }\n    const getLocalStore = () => {\n        let minValueAsStr = localStorage.getItem('counterMinValue')\n        let maxValueAsStr = localStorage.getItem('counterMaxValue')\n        if (minValueAsStr){\n            let newValue = JSON.parse(minValueAsStr)\n            setMinLocalNumber(newValue)\n        }\n        if (maxValueAsStr){\n            let newValue = JSON.parse(maxValueAsStr)\n            setMaxLocalNumber(newValue)\n        }\n    }\n\n    const incrementNumber = () => setValueNumber(valueNumber+1)\n\n    const resetNumber = () => setValueNumber(minLocalNumber)\n\n    const examination = () => {\n        if (valueNumber===maxLocalNumber) setValueNumber(maxLocalNumber)\n    }\n\n    const setNumber = () => {\n        setLocalStore()\n        getLocalStore()\n        setValueNumber(minLocalNumber)\n    }\n\n    const setMinNumberCallback = (event: ChangeEvent<HTMLInputElement>) => {\n        let setMinNum = JSON.parse(event.currentTarget.value)\n        setMinLocalNumber(setMinNum)\n    }\n    const setMaxNumberCallback = (event: ChangeEvent<HTMLInputElement>) => {\n        let setMaxNum = JSON.parse(event.currentTarget.value)\n        setMaxLocalNumber(setMaxNum)\n    }\n        return (\n        <div className=\"App\">\n          <Counter\n              valueNumber={valueNumber}\n              incrementNumber={incrementNumber}\n              resetNumber={resetNumber}\n              examination={examination}\n              minLocalNumber={minLocalNumber}\n              maxLocalNumber={maxLocalNumber}\n          />\n            <Localstorage\n                setNumberMin={setMinNumberCallback}\n                setNumberMax={setMaxNumberCallback}\n                minLocalNumber={minLocalNumber}\n                maxLocalNumber={maxLocalNumber}\n                setNumber={setNumber}\n            />\n        </div>\n    );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}